    with profile(activities=[ProfilerActivity.CUDA, ProfilerActivity.CPU], record_shapes=True) as prof:
        with record_function("train_model"):
            train_model(
                model,
                datasets,
                cfg,
                distributed=distributed,
                validate=(not args.no_validate),
                timestamp=timestamp,
                device=cfg.device,
                meta=meta)
    prof.export_chrome_trace(osp.join(cfg.work_dir, f'trace-{timestamp}.json'))
    with open(osp.join(cfg.work_dir, f'prof-{timestamp}.txt'),"w") as fo:
        str_output = str(prof.key_averages().table(sort_by="cpu_time_total",row_limit=-1, max_src_column_width=100))
        fo.write(str_output)
